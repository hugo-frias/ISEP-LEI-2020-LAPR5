<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="532px" preserveAspectRatio="none" style="width:1209px;height:532px;" version="1.1" viewBox="0 0 1209 532" width="1209px" zoomAndPan="magnify"><defs><filter height="300%" id="f1414bztkacfwi" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.0"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="4.0" dy="4.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="85.5" x2="85.5" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="343" x2="343" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="505" x2="505" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="600" x2="600" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="705" x2="705" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="844" x2="844" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1035.5" x2="1035.5" y1="38.2969" y2="492.1563"/><line style="stroke: #A80036; stroke-width: 1.0; stroke-dasharray: 5.0,5.0;" x1="1146.5" x2="1146.5" y1="38.2969" y2="492.1563"/><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="93" x="37.5" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="79" x="44.5" y="22.9951">NodeRoute</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="93" x="37.5" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="79" x="44.5" y="511.1514">NodeRoute</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="282" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="289" y="22.9951">NodeController</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="118" x="282" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="104" x="289" y="511.1514">NodeController</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="80" x="463" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="66" x="470" y="22.9951">NodeMap</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="80" x="463" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="66" x="470" y="511.1514">NodeMap</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="82" x="557" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="68" x="564" y="22.9951">NodeDTO</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="82" x="557" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="68" x="564" y="511.1514">NodeDTO</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="653" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="87" x="660" y="22.9951">NodeService</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="101" x="653" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="87" x="660" y="511.1514">NodeService</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="51" x="817" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="37" x="824" y="22.9951">Node</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="51" x="817" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="37" x="824" y="511.1514">Node</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="88" x="989.5" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="74" x="996.5" y="22.9951">NodeRepo</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="88" x="989.5" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="74" x="996.5" y="511.1514">NodeRepo</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="107" x="1091.5" y="3"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="93" x="1098.5" y="22.9951">NodeSchema</text><rect fill="#FEFECE" filter="url(#f1414bztkacfwi)" height="30.2969" style="stroke: #A80036; stroke-width: 1.5;" width="107" x="1091.5" y="491.1563"/><text fill="#000000" font-family="sans-serif" font-size="14" lengthAdjust="spacingAndGlyphs" textLength="93" x="1098.5" y="511.1514">NodeSchema</text><polygon fill="#A80036" points="74,65.4297,84,69.4297,74,73.4297,78,69.4297" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="3" x2="80" y1="69.4297" y2="69.4297"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="34" x="10" y="64.3638">POST</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="86" x2="128" y1="98.5625" y2="98.5625"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="128" x2="128" y1="98.5625" y2="111.5625"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="87" x2="128" y1="111.5625" y2="111.5625"/><polygon fill="#A80036" points="97,107.5625,87,111.5625,97,115.5625,93,111.5625" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="123" x="93" y="93.4966">validateNode(data)</text><polygon fill="#A80036" points="331,136.6953,341,140.6953,331,144.6953,335,140.6953" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="86" x2="337" y1="140.6953" y2="140.6953"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="233" x="93" y="135.6294">newDTO = createNode(req,res,next)</text><polygon fill="#A80036" points="493,165.8281,503,169.8281,493,173.8281,497,169.8281" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="343" x2="499" y1="169.8281" y2="169.8281"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="138" x="350" y="164.7622">dt = toDTO(req.body)</text><polygon fill="#A80036" points="588,194.9609,598,198.9609,588,202.9609,592,198.9609" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="505" x2="594" y1="198.9609" y2="198.9609"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="51" x="512" y="193.895">create()</text><polygon fill="#A80036" points="693.5,224.0938,703.5,228.0938,693.5,232.0938,697.5,228.0938" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="343" x2="699.5" y1="228.0938" y2="228.0938"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="98" x="350" y="223.0278">createNode(dt)</text><polygon fill="#A80036" points="832.5,253.2266,842.5,257.2266,832.5,261.2266,836.5,257.2266" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="705.5" x2="838.5" y1="257.2266" y2="257.2266"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="115" x="712.5" y="252.1606">node = create(dt)</text><polygon fill="#A80036" points="1023.5,282.3594,1033.5,286.3594,1023.5,290.3594,1027.5,286.3594" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="844.5" x2="1029.5" y1="286.3594" y2="286.3594"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="167" x="851.5" y="281.2935">newDT = saveNode(node)</text><polygon fill="#A80036" points="516,311.4922,506,315.4922,516,319.4922,512,315.4922" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="510" x2="1034.5" y1="315.4922" y2="315.4922"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="170" x="522" y="310.4263">raw = toPersistence(node)</text><polygon fill="#A80036" points="1135,340.625,1145,344.625,1135,348.625,1139,344.625" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1035.5" x2="1141" y1="344.625" y2="344.625"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="73" x="1042.5" y="339.5591">create(raw)</text><line style="stroke: #A80036; stroke-width: 1.0;" x1="1147" x2="1189" y1="373.7578" y2="373.7578"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1189" x2="1189" y1="373.7578" y2="386.7578"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="1148" x2="1189" y1="386.7578" y2="386.7578"/><polygon fill="#A80036" points="1158,382.7578,1148,386.7578,1158,390.7578,1154,386.7578" style="stroke: #A80036; stroke-width: 1.0;"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="40" x="1154" y="368.6919">save()</text><polygon fill="#A80036" points="516,411.8906,506,415.8906,516,419.8906,512,415.8906" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="510" x2="843.5" y1="415.8906" y2="415.8906"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="163" x="522" y="410.8247">newDTO = toDTO(newDT)</text><polygon fill="#A80036" points="97,441.0234,87,445.0234,97,449.0234,93,445.0234" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="91" x2="342" y1="445.0234" y2="445.0234"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="59" x="103" y="439.9575">response</text><polygon fill="#A80036" points="14,470.1563,4,474.1563,14,478.1563,10,474.1563" style="stroke: #A80036; stroke-width: 1.0;"/><line style="stroke: #A80036; stroke-width: 1.0;" x1="8" x2="85" y1="474.1563" y2="474.1563"/><text fill="#000000" font-family="sans-serif" font-size="13" lengthAdjust="spacingAndGlyphs" textLength="59" x="20" y="469.0903">response</text><!--MD5=[da2dcf8fb62c70654a76a7c3bd9c7ebf]
@startuml
-> NodeRoute: POST
 NodeRoute -> NodeRoute: validateNode(data)
 NodeRoute -> NodeController: newDTO = createNode(req,res,next)
 NodeController -> NodeMap: dt = toDTO(req.body)
 NodeMap -> NodeDTO: create()
 NodeController -> NodeService: createNode(dt)
 NodeService -> Node: node = create(dt)
 Node -> NodeRepo: newDT = saveNode(node)
 NodeRepo -> NodeMap: raw = toPersistence(node)
 NodeRepo -> NodeSchema: create(raw)
 NodeSchema -> NodeSchema: save()
 Node -> NodeMap: newDTO = toDTO(newDT)
 NodeController -> NodeRoute: response
 <- NodeRoute: response
@enduml

PlantUML version 1.2019.12(Sun Nov 03 10:24:54 UTC 2019)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 1.8.0_232-heroku-b09
Operating System: Linux
Default Encoding: UTF-8
Language: en
Country: US
--></g></svg>